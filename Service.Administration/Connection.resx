<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVKlUMUChdEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABOJ2INXThki2VVgfhhSXX9XTpoqVstWxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWzRhXGRVgeZ5lsL/eJO+/2xsmP90iLP/ZFaB81s0X3UzM2YFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWjVfMGBFc8Nzgq7/fqrV/3+r1v94k77/bGyY/3eSvf93kr3/b3mk/19FcdVaM15BAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWi1aEVw6ZpVsbZn7faXQ/3+r1v9/q9b/f6vW/3iTvv9sbJj/d5K9/3eSvf93kr3/do+6/2lm
        kv5cOmelWzNbGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAlo1YmVmWIXreZnF/3+r1v9/q9b/f6vW/3+r1v9/q9b/eJO+/2xsmP93kr3/d5K9/3eS
        vf93kr3/d5K9/3OHsv9kVIHxWjNhcT8APwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFwzYTdhSHTLdIey/3+q1f9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v94k77/bGyY/3eS
        vf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf9veKT/X0Vy0lsyYD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFwuXBZdO2iebXCd/X2n0v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3iT
        vv9sbJj/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf92j7r/aWWR/l06ZqFYLGMXAAAAAAAA
        AAAAAAAAAAAAAAAAAABbM19AZlqG73qcx/9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/eJO+/2xsmP93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/c4ey/2RS
        fe9aM2JBAAAAAAAAAAAAAAAAAAAAAGNMes5+qdT/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/f6vW/3+r1v94k77/bGyY/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eS
        vf93kr3/dpG8/2FHc88AAAAAAAAAAAAAAAAAAAAAaF6K63+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3iTvv9sbJj/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eS
        vf93kr3/d5K9/3eSvf93kr3/ZFSA7AAAAAAAAAAAAAAAAAAAAABnXorsf6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/eJO+/2xsmP93kr3/d5K9/3eSvf93kr3/d5K9/3eS
        vf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf9kVYDsAAAAAAAAAAAAAAAAAAAAAGdeiux/q9b/f6vW/3+r
        1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v94k77/bGyY/3eSvf93kr3/d5K9/3eS
        vf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/2RVgOwAAAAAAAAAAAAAAAAAAAAAZ16K7H+r
        1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3iTvv9sbJj/d5K9/3eS
        vf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/ZFWA7AAAAAAAAAAAAAAAAAAA
        AABnXorsf6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/eJO+/2xs
        mP93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf9kVYDsAAAAAAAA
        AAAAAAAAAAAAAGdeiux/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v94k77/bGyY/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/3eSvf93kr3/d5K9/2RV
        gOwAAAAAAAAAAAAAAAAAAAAAZ16K7H+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/fKHM/2tplf9kUX3/coOu/3eSvf93kr3/dpG8/2pYg/9qZpL/do65/3eSvf93kr3/d5K9/3eS
        vf93kr3/ZFWA7AAAAAAAAAAAAAAAAAAAAABnXorsf6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/faXQ/21wnP9pYI3/eJTA/3qbx/9raJT/Z1yI/3SIs/91jbj/j3WT/76wwP97Y4f/bnSg/3eS
        vf93kr3/d5K9/3eSvf9kVYDsAAAAAAAAAAAAAAAAAAAAAGdeiux/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v9/q9b/fqjT/294pP9nXIn/d5G9/3+r1v9/q9b/f6vW/3+r1v96msb/aGGN/2dciP+WfZr/3dbe/9zV
        3f+Eaoz/d5K9/3eSvf93kr3/d5K9/2RVgOwAAAAAAAAAAAAAAAAAAAAAZ16K7H+r1v9/q9b/f6vW/3+r
        1v9/q9b/fqrV/3KArP9nWof/dYm1/36q1f9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v97nsn/bFmD/9rR
        2//g2eH/3dbe/41zkv93kr3/d5K9/3eSvf93kr3/ZFWA7AAAAAAAAAAAAAAAAAAAAABnXorsf6vW/3+r
        1v9/q9b/fqrV/3SItP9nWob/coGt/36q1f9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v99ptH/bnGd/5aA
        nf/r5+z///////39/f/u6u7/fmSI/3aRvP93kr3/d5K9/3eSvf9kVYDsAAAAAAAAAAAAAAAAAAAAAGde
        iux/q9b/f6vW/3eQvP9nXIj/cHml/36o0/9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9+qtX/coGs/4Nu
        kf/a0tz/////////////////8u/y/52Io/9raZX/ZVWB/294o/93kr3/d5K9/2RVgOwAAAAAAAAAAAAA
        AAAAAAAAZ1yJ6nmXw/9oYIz/bXGd/32l0P9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/d5G8/3Zl
        jf/Ft8f//v7+////////////+vj6/7Ohtv9wZo//eZnE/3+r1v9+p9L/b3ai/2VWgv9xf6r/ZFWA6gAA
        AAAAAAAAAAAAAAAAAABdOme2aWGO/3yhzP9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r1v9/q9b/ep3I/29n
        kf+vnLL/+Pf5/////////////v7+/8a4yP93ZYz/do25/3+r1v9/q9b/f6vW/3+r1v9/q9b/fKTP/2pm
        kv9cOGW4AAAAAAAAAAAAAAAAAAAAAFstWxxgQW6/b3ej/36n0/9/q9b/f6vW/3+r1v9/q9b/faXQ/25w
        m/+ZhKD/7uru/////////////////9jO2f+CbZD/coCr/36q1f9/q9b/f6vW/3+r1v9/q9b/f6vW/36o
        0/9weqb/X0NvvVstWxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaNGFJYUdzz3J/q/9+qdT/fqrV/3F+
        qv+GcZP/3dbf/////////////////+fh6P+Re5r/bnKe/32m0f9/q9b/f6vW/3+r1v9/q9b/f6vW/36q
        1f9zhLD/YUp20Vo0YUkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWjNgWmJM
        ed1sWIL/yLvK//7+/v////////////Lv8/+ijaf/bWiT/3ugy/9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v92jrn/Y1F94VszYF8AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZjNmBVs0YmqFaIvn2M/Z//r5+v+0o7f/cGOM/3mWwv9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v95l8L/Z1qH7Vw0YHQ/H18IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwuXAtaM2B8aERt7292ov9/q9b/f6vW/3+r1v9/q9b/f6vW/3+r
        1v97nsn/aWOQ9lw3Y4paLVoRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaLVoRXTVkiWhhjvZ6nMf/f6vW/3+r
        1v98o87/bGyY/F07aJ9XNGAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVS9eG1w5
        ZpppYY76a2qW/l5AbbVaM2AtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFs2Ww5VMGEVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//5////4H///8Af//8AD//8AAP/8AAA/+AAAH+AAAAfAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA/AA
        AA/4AAAf/gAAf/+AAf//4Af///gf///+f/8=
</value>
  </data>
</root>